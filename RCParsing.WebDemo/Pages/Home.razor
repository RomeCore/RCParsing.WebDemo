@page "/"

<div class="main-container">
	<div class="editor-container">
		<GrammarEditorComponent @ref="grammarEditor" />
		<MainEditorComponent @ref="mainEditor" />
	</div>

	<div class="ast-container">

		<label>
			Example:
			<select @onchange="OnExampleChange">
				@foreach (var exampleName in Examples.examples.Keys)
				{
					<option value="@exampleName">@exampleName</option>
				}
			</select>

			<input type="checkbox" @onchange="DetCheckboxChanged" />
			Detailed messages

			<input type="checkbox" @onchange="StCheckboxChanged" />
			Stack traces

			<input type="checkbox" @onchange="WkCheckboxChanged" />
			Walk trace

		</label>

		<ASTComponent @ref="ast" />
	</div>
</div>

<style>
	.main-container {
	display: grid;
	grid-template-columns: 1fr 1fr;
	gap: 20px;
	height: 100%;
	overflow: hidden;
	}

	.editor-container {
		display: grid;
		grid-template-rows: 1fr 1fr;
		gap: 20px;
		height: 100%;
	}

	.ast-container {
		width: 45vw;
		height: 90vh;
		overflow: auto;
	}

	#main-code-editor,
	#grammar-code-editor {
		width: 45vw;
		height: 42vh;
	}
</style>


@code {
	#nullable disable

	private GrammarEditorComponent grammarEditor;
	private MainEditorComponent mainEditor;
	private ASTComponent ast;
	private string selectedExample;

	protected async override Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);

		void GrammarStateChanged()
		{
			mainEditor.SetParser(grammarEditor.parser);
			if (mainEditor.exception != null)
				ast.ShowException(grammarEditor.exception);
		}
		void StateChanged()
		{
			if (grammarEditor.exception != null || mainEditor.exception != null)
				ast.ShowException(grammarEditor.exception ?? mainEditor.exception);
			else
				ast.Render(mainEditor.ast);
		}
		grammarEditor.OnParseStateChanged += GrammarStateChanged;
		mainEditor.OnParseStateChanged += StateChanged;

		try
		{
			if (selectedExample == null)
			{
				await Task.Delay(200);
				await ChangeExample("JSON");
			}
			await Task.Delay(200);
			await grammarEditor.Update();
		}
		catch {}
	}

	private async Task OnExampleChange(ChangeEventArgs args)
	{
		await ChangeExample((string)args.Value);
	}

	private async Task ChangeExample(string exampleName)
	{
		selectedExample = exampleName;
		var (grammar, code) = Examples.examples[exampleName];
		await grammarEditor.SetContents(grammar);
		await mainEditor.SetContents(code);
	}

	private async Task DetCheckboxChanged(ChangeEventArgs args)
	{
		grammarEditor.detailedMessages = (bool)args.Value;
		await grammarEditor.Update();
	}

	private async Task StCheckboxChanged(ChangeEventArgs args)
	{
		grammarEditor.stackTraces = (bool)args.Value;
		await grammarEditor.Update();
	}

	private async Task WkCheckboxChanged(ChangeEventArgs args)
	{
		grammarEditor.walkTrace = (bool)args.Value;
		await grammarEditor.Update();
	}
}